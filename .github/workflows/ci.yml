# name: "Continuous Integration"

# on:
#   workflow_dispatch:
#   push:
#     branches: [main]
#     tags:
#       - "v*.*.*"
#     paths-ignore:
#       - "migrations/"
#       - "*.txt"
#       - "*.md"

#   pull_request:
#     branches: [main]
#     paths-ignore:
#       - "migrations/"
#       - "*.txt"
#       - "*.md"

# jobs:
#   # lint:
#   #   name: "Lint the code"
#   #   runs-on: ubuntu-latest

#   #   steps:
#   #     - name: Checkout code
#   #       uses: actions/checkout@v3

#   #     - name: Set up Python
#   #       uses: actions/setup-python@v4
#   #       with:
#   #         python-version: "3.10"

#   #     - name: Install dependencies
#   #       run: |
#   #         python -m venv venv
#   #         . venv/bin/activate
#   #         pip install --upgrade pip
#   #         pip install flake8 black

#   #     - name: Run flake8
#   #       run: |
#   #         . venv/bin/activate
#   #         flake8 .  # Lint the code
#   test:
#     name: Run unittests
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.10"
#           cache: "pip"

#       - name: Install dependencies
#         run: |
#           python -m venv venv
#           . venv/bin/activate
#           pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run unittests
#         run: |
#           . venv/bin/activate
#           pytest

#   push_to_registry:
#     name: Push Docker image to Docker Hub, GHCR, and ECR
#     runs-on: ubuntu-latest
#     permissions:
#       packages: write
#       contents: read
#       attestations: write
#       id-token: write
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v4

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Log in to GitHub Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           role-to-assume: ${{ secrets.AWS_OICD_ROLE }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Log in to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v2

#       - name: Extract metadata (tags, labels) for Docker (Docker Hub, GHCR, and ECR)
#         id: meta
#         uses: docker/metadata-action@v5
#         with:
#           images: |
#             merch7x/flask-blog
#             ghcr.io/${{ github.repository_owner }}/dev
#             ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/flask-blog
#           # tags: |
#           #   type=semver,pattern={{version}}

#       - name: Build and push Docker image
#         id: push
#         uses: docker/build-push-action@v6
#         with:
#           context: .
#           file: ./Dockerfile
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{steps.meta.outputs.labels }}
